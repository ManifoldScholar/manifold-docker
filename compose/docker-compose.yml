version: "3"
services:
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8084:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - network1
  postgres:
    image: postgres:alpine
    ports:
      - "5432:5432"
    volumes:
      - manifold_data:/manifold_data/postgresql/data
    environment:
      POSTGRES_DB: 'manifold_production'
    networks:
      - network1
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.7
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      xpack.security.enabled: 'false'
    ports:
      - "9200:9200"
    networks:
      - network1
  redis: 
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - manifold_data:/manifold_data/redis
    networks:
      - network1
  api_cable:
    image: manifoldscholar/manifold_api_cable:${MANIFOLD_TAG}
    volumes:
      - manifold_data:/manifold_data
      - manifold_sockets:/manifold_sockets
    env_file:
      - ./environment/manifold.env
      - ./environment/rails.env
    networks:
      - network1
  api_clockwork:
    image: manifoldscholar/manifold_api_clockwork:${MANIFOLD_TAG}
    volumes:
      - manifold_data:/manifold_data
      - manifold_sockets:/manifold_sockets
    env_file:
      - ./environment/manifold.env
      - ./environment/rails.env
    networks:
      - network1
    command: ["./start-and-run", "bin/clockwork clock.rb"]
  api_rails:
    image: manifoldscholar/manifold_api_rails:${MANIFOLD_TAG}
    volumes:
      - manifold_data:/manifold_data
      - manifold_sockets:/manifold_sockets
    env_file:
      - ./environment/manifold.env
      - ./environment/rails.env
    command: ["./start-and-run", "bin/puma -C config/puma.rb*"]
    networks:
      - network1
  api_sidekiq:
    image: manifoldscholar/manifold_api_sidekiq:${MANIFOLD_TAG}
    volumes:
      - manifold_data:/manifold_data
      - manifold_sockets:/manifold_sockets
    env_file:
      - ./environment/manifold.env
      - ./environment/rails.env
    networks:
      - network1
    command: ["./start-and-run", "bin/sidekiq"]
  client:
    image: manifoldscholar/manifold_client:${MANIFOLD_TAG}
    env_file:
      - ./environment/manifold.env
    volumes:
      - manifold_data:/manifold_data
      - manifold_sockets:/manifold_sockets
    command: yarn run start
    networks:
      - network1
  proxy:
      image: manifoldscholar/manifold_proxy:${MANIFOLD_TAG}
      volumes:
        - manifold_data:/manifold_data
        - manifold_sockets:/manifold_sockets
      env_file:
        - ./environment/nginx.env
      ports:
        - "4000:80"
        - "4001:443"
      networks:
        - network1

volumes:
  manifold_data:
  manifold_sockets:

networks:
  network1:
