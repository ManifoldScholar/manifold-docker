#!/usr/bin/env bash

build() {
    if [[ -z ${1} ]]
    then
        local commands=("VERSION (x.x.x)")
        error_message "You must specify the version of Manifold to build."
        help_message ${FUNCNAME[0]} "${commands[@]}"
        exit 1
    fi
    local manifold_version=${1}

    standard_message "Removing existing Manifold (${manifold_version}) images if found"
    docker image rm manifoldscholar/manifold_proxy:${manifold_version}
    docker image rm manifoldscholar/manifold_api:${manifold_version}
    docker image rm manifoldscholar/manifold_client:${manifold_version}
    _cleanup_images

    standard_message "Building Manifold (${manifold_version}) Proxy image"
    docker build --no-cache -t manifoldscholar/manifold_proxy:${manifold_version} -f ${proxy_dockerfile} .
    standard_message "Building Manifold (${manifold_version}) API image"
    docker build --no-cache --build-arg MANIFOLD_VERSION=${manifold_version} -t manifoldscholar/manifold_api:${manifold_version} -f ${api_dockerfile} .
    standard_message "Building Manifold (${manifold_version}) Client image"
    docker build --no-cache --build-arg MANIFOLD_VERSION=${manifold_version} -t manifoldscholar/manifold_client:${manifold_version} -f ${client_dockerfile} .

    _build_help_message


}

_build_help_message() {
cat << BuildHelpMessage

    Build complete for Manifold ${manifold_version}

    View images:
        docker image ls
    Push images:
        docker push manifoldscholar/manifold_[IMAGE NAME]:${manifold_version}

BuildHelpMessage
}