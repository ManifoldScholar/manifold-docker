#!/usr/bin/env bash

compose_dir="compose"
dockerfile_dir="dockerfiles"

docker_compose_file="${compose_dir}/docker-compose.yml"
docker_stack_file="${compose_dir}/docker-compose-override.stack.yml"
api_dockerfile="${dockerfile_dir}/manifold_api/Dockerfile"
proxy_dockerfile="${dockerfile_dir}/manifold_proxy/Dockerfile"

build_images() {
    if [[ -z ${1} ]]
    then
        echo "You must specify the version of Manifold to build."
        echo $"Usage: $0 build_images x.x.x"
        exit 1
    fi
    output "Building v${1} of Manifold and Proxy images"
    output "Attempting to remove old manifold images..."
    docker image rm manifold_proxy
    docker image rm manifold_api
    cleanup
    docker build --no-cache -t manifold_proxy -f ${proxy_dockerfile} .
    docker build --no-cache --build-arg MANIFOLD_VERSION=${1} -t manifold_api -f ${api_dockerfile} .
}

create_volumes() {
    docker volume create manifold_data
    docker volume create manifold_sockets
}

run_containers() {
    docker run -d -v manifold_data:/manifold_data -v manifold_sockets:/manifold_sockets manifold_api:latest
    docker run -d -p 4000:80 -v manifold_data:/manifold_data -v manifold_sockets:/manifold_sockets manifold_proxy:latest
}

compose_up() {
    pull_dependencies
    docker swarm init
    docker stack deploy -c docker-stack.yml -c docker-compose.stack.yml manifold
    output "View stack: docker stack ls\nView containers: docker service ls"
    output "Logs: docker logs CONTAINER"
    output "Visualizer: localhost:8084\nAPI: docker.manifold.lvh:4000/api"
    output "Teardown command: ./bin/docker-helper compose_down"
}

compose_down() {
    docker stack rm manifold
    docker swarm leave --force
}

stack() {
    case "$1" in
        up)
            stack_up
            ;;
        down)
            stack_down
            ;;
        *)
            echo $"Usage: $0 stack {up|down}"
            exit 1
    esac

}

stack_up() {
    pull_dependencies
    docker swarm init
    docker stack deploy -c docker-stack.yml -c docker-compose.stack.yml manifold
    output "View stack: docker stack ls\nView containers: docker service ls"
    output "Logs: docker logs CONTAINER"
    output "Visualizer: localhost:8084\nAPI: docker.manifold.lvh:4000/api"
    output "Teardown command: ./bin/docker-helper compose_down"
}
stack_down(){
    docker stack rm manifold
    docker swarm leave --force
}

cleanup() {
    output "Cleaning up stale volumes."
    docker volume prune
    output "Cleaning up stale images."
    docker image prune
}

# Private

container_is_running() {
#    IS_RUNNING=`docker-compose ps -q ${1}`
    docker-compose ps -q ${1}
#if [[ "$IS_RUNNING" != "" ]]; then
#    echo "The service is running!!!"
#fi
}
pull_dependencies() {
    docker pull dockersamples/visualizer:stable
    docker pull postgres:alpine
    docker pull redis:alpine
    docker pull docker.elastic.co/elasticsearch/elasticsearch:6.1.3
}

output() {
    echo -e "\n$1\n"
}

check_rundir() {
    if [ ! -f "compose/docker-compose.yml" ]
    then
        echo "Error! Can't locate: $(pwd)/compose/docker-compose.yml"
        echo "Please run from the root of manifold project."
        help
    fi
}

help() {
    echo $"Usage: $0 {build_images|create_volumes|run_containers|stack|compose_up|compose_down|cleanup}"
    exit 1
}


check_rundir

MANIFOLD_SRC="${HOME}/src/manifold/"

case "$1" in
    build_images)
        build_images $2
        ;;
    create_volumes)
        create_volumes
        ;;
    run_containers)
        run_containers
        ;;
    compose_up)
        compose_up
        ;;
    compose_down)
        compose_down
        ;;
    stac)
        container_is_running $2
        status=$?
        echo $status
        ;;
    container_is_running)
        container_is_running $2
        status=$?
        echo $status
        ;;
    *)
        help
esac

